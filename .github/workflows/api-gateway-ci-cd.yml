name: API Gateway CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - "services/api-gateway/**"
  pull_request:
    branches: [ main ]
    paths:
      - "services/api-gateway/**"

jobs:
  test:
    name: Run API Gateway Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/api-gateway
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          python3 -m pytest

  build_and_deploy:
    name: Build, Push, and Deploy API Gateway
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: services/docker
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin


      - name: Build and Push API Gateway Image with Docker Compose
        run: |
          docker compose build api-gateway
          docker compose push api-gateway

      - name: Install Kompose
        run: |
          curl -L https://github.com/kubernetes/kompose/releases/download/v1.24.0/kompose-linux-amd64 -o kompose
          chmod +x kompose
          sudo mv kompose /usr/local/bin

      - name: Generate Kubernetes Manifests
        run: |
          mkdir -p k8s
          # Generate manifests from docker-compose.yml located in the services folder root.
          kompose convert -f docker-compose.yml -o ../k8s/

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.26.0'

      - name: Configure Kubeconfig
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 --decode > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/

