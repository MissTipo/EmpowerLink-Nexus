name: Geo Mapping CI/CD

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "services/geo-mapping-service/**"
  pull_request:
    branches: [ main ]
    paths:
      - "services/geo-mapping-service/**"

jobs:
  test:
    name: ðŸ§ª Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/geo-mapping-service
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('services/geo-mapping-service/requirements.txt') }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        run: |
          python3 -m pytest

  build_and_deploy:
    name: ðŸš¢ Build, Push & Deploy
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: services/docker
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" \
            | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & push geo-mapping image
        run: |
          docker compose build geo-mapping-service
          docker compose push geo-mapping-service

      - name: Install Kompose
        run: |
          curl -L https://github.com/kubernetes/kompose/releases/download/v1.24.0/kompose-linux-amd64 \
            -o kompose && chmod +x kompose && sudo mv kompose /usr/local/bin

      - name: Generate K8s Manifests
        run: |
          mkdir -p k8s
          kompose convert -f docker-compose.yml -o ../k8s/

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.26.0'

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: empowerlink-nexus

      - name: Debug gcloud Auth
        run: gcloud auth list

      - name: Set active account from JSON key
        run: |
          ACCOUNT=$(echo '${{ secrets.GCP_SA_KEY }}' | jq -r '.client_email')
          gcloud config set account $ACCOUNT

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials empowerlink-cluster \
            --zone us-central1-a --project empowerlink-nexus

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin -q

      - name: Clean up old deployments
        run: |
          kubectl delete deployment geo-mapping-service \
            --ignore-not-found --grace-period=0 --force
          kubectl delete service geo-mapping-service \
            --ignore-not-found

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f ../k8s/geo-mapping-service-deployment.yaml
          kubectl apply -f ../k8s/geo-mapping-service-service.yaml

